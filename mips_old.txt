.data
arr__global_1darray_uninitialized_: .space 24
arr__global_1darray_initialized_: .space 16
arr__global_2darray_initialized_: .space 16
str__0: .asciiz "18373109\n"
str__1: .asciiz "Fib: "
newline__: .asciiz "\n"
.text

# === global_var_initialized = 1234 ===
li $a1, 1234
sw $a1, 4($gp)

# === global_1darray_initialized[0] = 1 ===
li $a2, 1
sw $a2, arr__global_1darray_initialized_+0($zero)

# === global_1darray_initialized[1] = 2 ===
li $a2, 2
sw $a2, arr__global_1darray_initialized_+4($zero)

# === global_1darray_initialized[2] = 4 ===
li $a2, 4
sw $a2, arr__global_1darray_initialized_+8($zero)

# === global_1darray_initialized[3] = 4 ===
li $a2, 4
sw $a2, arr__global_1darray_initialized_+12($zero)

# === global_2darray_initialized[0] = 5 ===
li $a2, 5
sw $a2, arr__global_2darray_initialized_+0($zero)

# === global_2darray_initialized[1] = 6 ===
li $a2, 6
sw $a2, arr__global_2darray_initialized_+4($zero)

# === global_2darray_initialized[2] = 7 ===
li $a2, 7
sw $a2, arr__global_2darray_initialized_+8($zero)

# === global_2darray_initialized[3] = 8 ===
li $a2, 8
sw $a2, arr__global_2darray_initialized_+12($zero)

# === =========FUNC void testnoreturn========= ===
addi $sp, $sp, -312
j main
testnoreturn:
lw $s0, 100($sp)

# === global_var_uninitialized = n ===
sw $s0, 0($gp)

# === RETURN ===
jr $ra

# === =========END_FUNC void testnoreturn========= ===

# === =========FUNC int fib========= ===
fib:
lw $s0, 100($sp)

# === #T9 = x ===
move $t0, $s0

# === JUMP_IF #T9!=0 label_1 ===
bne $t0, $zero, label_1
# RELEASE $t0

# === RETURN 1 ===
li $v0, 1
jr $ra

# === LABEL label_1 ===
label_1:

# === #T10 = x - 1 ===
addiu $t0, $s0, -1

# === JUMP_IF #T10!=0 label_2 ===
bne $t0, $zero, label_2
# RELEASE $t0

# === RETURN 1 ===
li $v0, 1
jr $ra

# === LABEL label_2 ===
label_2:

# === #T11 = x - 1 ===
addiu $t0, $s0, -1

# === _1_#T9 = #T11 ===
move $t1, $t0
# RELEASE $t0

# === JUMP_IF _1_#T9!=0 _1_label_1 ===
bne $t1, $zero, _1_label_1
# RELEASE $t1

# === %RET = 1 ===
li $v0, 1

# === JUMP label_7 ===
j label_7

# === LABEL _1_label_1 ===
_1_label_1:

# === _1_#T10 = #T11 - 1 ===
lw $a1, 112($sp)
addiu $t0, $a1, -1

# === JUMP_IF _1_#T10!=0 _1_label_2 ===
bne $t0, $zero, _1_label_2
# RELEASE $t0

# === %RET = 1 ===
li $v0, 1

# === JUMP label_7 ===
j label_7

# === LABEL _1_label_2 ===
_1_label_2:

# === PREPARE_CALL fib ===
addi $sp, $sp, -288

# === _1_#T11 = #T11 - 1 ===
lw $a1, 400($sp)
addiu $t0, $a1, -1

# === PUSH_PARA _1_#T11 ===
sw $t0, 100($sp)
# RELEASE $t0

# === CALL fib ===
sw $s0, 24($sp)
sw $ra, 0($sp)
jal fib
lw $ra, 0($sp)
lw $s0, 24($sp)
addi $sp, $sp, 288

# === _1_#T12 = %RET ===
move $t0, $v0

# === PREPARE_CALL fib ===
addi $sp, $sp, -288

# === _1_#T13 = #T11 - 2 ===
lw $a1, 400($sp)
addiu $t1, $a1, -2

# === PUSH_PARA _1_#T13 ===
sw $t1, 100($sp)
# RELEASE $t1

# === CALL fib ===
sw $t0, 56($sp)
# RELEASE $t0
sw $s0, 24($sp)
sw $ra, 0($sp)
jal fib
lw $ra, 0($sp)
lw $s0, 24($sp)
lw $t0, 56($sp)
addi $sp, $sp, 288

# === _1_#T14 = %RET ===
move $t1, $v0

# === _1_#T15 = _1_#T12 + _1_#T14 ===
addu $t2, $t0, $t1
# RELEASE $t0
# RELEASE $t1

# === %RET = _1_#T15 ===
move $v0, $t2
# RELEASE $t2

# === LABEL label_7 ===
label_7:

# === #T12 = %RET ===
move $t0, $v0

# === #T13 = x - 2 ===
addiu $t1, $s0, -2

# === _2_#T9 = #T13 ===
move $t2, $t1
# RELEASE $t1

# === JUMP_IF _2_#T9!=0 _2_label_1 ===
bne $t2, $zero, _2_label_1
# RELEASE $t2

# === %RET = 1 ===
li $v0, 1

# === JUMP label_8 ===
j label_8

# === LABEL _2_label_1 ===
_2_label_1:

# === _2_#T10 = #T13 - 1 ===
lw $a1, 120($sp)
addiu $t1, $a1, -1

# === JUMP_IF _2_#T10!=0 _2_label_2 ===
bne $t1, $zero, _2_label_2
# RELEASE $t1

# === %RET = 1 ===
li $v0, 1

# === JUMP label_8 ===
j label_8

# === LABEL _2_label_2 ===
_2_label_2:

# === PREPARE_CALL fib ===
addi $sp, $sp, -288

# === _2_#T11 = #T13 - 1 ===
lw $a1, 408($sp)
addiu $t1, $a1, -1

# === PUSH_PARA _2_#T11 ===
sw $t1, 100($sp)
# RELEASE $t1

# === CALL fib ===
sw $t0, 56($sp)
# RELEASE $t0
sw $s0, 24($sp)
sw $ra, 0($sp)
jal fib
lw $ra, 0($sp)
lw $s0, 24($sp)
lw $t0, 56($sp)
addi $sp, $sp, 288

# === _2_#T12 = %RET ===
move $t1, $v0

# === PREPARE_CALL fib ===
addi $sp, $sp, -288

# === _2_#T13 = #T13 - 2 ===
lw $a1, 408($sp)
addiu $t2, $a1, -2

# === PUSH_PARA _2_#T13 ===
sw $t2, 100($sp)
# RELEASE $t2

# === CALL fib ===
sw $t0, 56($sp)
# RELEASE $t0
sw $t1, 60($sp)
# RELEASE $t1
sw $s0, 24($sp)
sw $ra, 0($sp)
jal fib
lw $ra, 0($sp)
lw $s0, 24($sp)
lw $t0, 56($sp)
lw $t1, 60($sp)
addi $sp, $sp, 288

# === _2_#T14 = %RET ===
move $t2, $v0

# === _2_#T15 = _2_#T12 + _2_#T14 ===
addu $t3, $t1, $t2
# RELEASE $t1
# RELEASE $t2

# === %RET = _2_#T15 ===
move $v0, $t3
# RELEASE $t3

# === LABEL label_8 ===
label_8:

# === #T14 = %RET ===
move $t1, $v0

# === #T15 = #T12 + #T14 ===
addu $t2, $t0, $t1
# RELEASE $t0
# RELEASE $t1

# === RETURN #T15 ===
move $v0, $t2
# RELEASE $t2
jr $ra

# === =========END_FUNC int fib========= ===

# === =========FUNC char testchar========= ===
testchar:

# === RETURN 99 ===
li $v0, 99
jr $ra

# === =========END_FUNC char testchar========= ===

# === =========FUNC int testmuldiv========= ===
testmuldiv:
lw $s0, 100($sp)
lw $s1, 104($sp)
lw $s2, 108($sp)

# === #T16 = b / c ===
div $s1, $s2
mflo $t0

# === #T17 = a * #T16 ===
mul $t1, $s0, $t0
# RELEASE $t0

# === RETURN #T17 ===
move $v0, $t1
# RELEASE $t1
jr $ra

# === =========END_FUNC int testmuldiv========= ===

# === =========FUNC void main========= ===
main:

# === c = 97 ===
li $s0, 97

# === PRINT 0 strcon ===
la $a0, str__0
li $v0, 4
syscall

# === global_var_uninitialized = 144 ===
li $a1, 144
sw $a1, 0($gp)

# === LABEL label_9 ===
label_9:

# === PRINT global_var_uninitialized int ===
lw $a0, 0($gp)
li $v0, 1
syscall

# === PRINT #ENDL ===
la $a0, newline__
li $v0, 4
syscall

# === SCANF n ===
li $v0, 5
syscall
move $s1, $v0

# === PRINT 1 strcon ===
la $a0, str__1
li $v0, 4
syscall

# === _4_#T9 = n ===
move $t0, $s1

# === JUMP_IF _4_#T9!=0 _4_label_1 ===
bne $t0, $zero, _4_label_1
# RELEASE $t0

# === %RET = 1 ===
li $v0, 1

# === JUMP label_10 ===
j label_10

# === LABEL _4_label_1 ===
_4_label_1:

# === _4_#T10 = n - 1 ===
addiu $t0, $s1, -1

# === JUMP_IF _4_#T10!=0 _4_label_2 ===
bne $t0, $zero, _4_label_2
# RELEASE $t0

# === %RET = 1 ===
li $v0, 1

# === JUMP label_10 ===
j label_10

# === LABEL _4_label_2 ===
_4_label_2:

# === PREPARE_CALL fib ===
addi $sp, $sp, -288

# === _4_#T11 = n - 1 ===
addiu $t0, $s1, -1

# === PUSH_PARA _4_#T11 ===
sw $t0, 100($sp)
# RELEASE $t0

# === CALL fib ===
sw $s0, 24($sp)
sw $s1, 28($sp)
jal fib
lw $s0, 24($sp)
lw $s1, 28($sp)
addi $sp, $sp, 288

# === _4_#T12 = %RET ===
move $t0, $v0

# === PREPARE_CALL fib ===
addi $sp, $sp, -288

# === _4_#T13 = n - 2 ===
addiu $t1, $s1, -2

# === PUSH_PARA _4_#T13 ===
sw $t1, 100($sp)
# RELEASE $t1

# === CALL fib ===
sw $t0, 56($sp)
# RELEASE $t0
sw $s0, 24($sp)
sw $s1, 28($sp)
jal fib
lw $s0, 24($sp)
lw $s1, 28($sp)
lw $t0, 56($sp)
addi $sp, $sp, 288

# === _4_#T14 = %RET ===
move $t1, $v0

# === _4_#T15 = _4_#T12 + _4_#T14 ===
addu $t2, $t0, $t1
# RELEASE $t0
# RELEASE $t1

# === %RET = _4_#T15 ===
move $v0, $t2
# RELEASE $t2

# === LABEL label_10 ===
label_10:

# === #T18 = %RET ===
move $t0, $v0

# === PRINT #T18 int ===
move $a0, $t0
# RELEASE $t0
li $v0, 1
syscall

# === PRINT #ENDL ===
la $a0, newline__
li $v0, 4
syscall

# === %RET = 99 ===
li $v0, 99

# === LABEL label_11 ===
label_11:

# === #T19 = %RET ===
move $t0, $v0

# === PRINT #T19 char ===
move $a0, $t0
# RELEASE $t0
li $v0, 11
syscall

# === PRINT #ENDL ===
la $a0, newline__
li $v0, 4
syscall

# === PRINT 75 char ===
li $a0, 75
li $v0, 11
syscall

# === PRINT #ENDL ===
la $a0, newline__
li $v0, 4
syscall

# === %RET = 2048 ===
li $v0, 2048

# === LABEL label_12 ===
label_12:

# === #T20 = %RET ===
move $t0, $v0

# === PRINT #T20 int ===
move $a0, $t0
# RELEASE $t0
li $v0, 1
syscall

# === PRINT #ENDL ===
la $a0, newline__
li $v0, 4
syscall

# === i = 0 ===
move $s2, $zero

# === #T23 = i - 3 ===
addiu $t0, $s2, -3

# === JUMP_IF #T23>=0 label_3 ===
bgez $t0, label_3
# RELEASE $t0

# === LABEL label_4 ===
label_4:

# === #T24 = global_1darray_initialized[i] ===
sll $a1, $s2, 2
lw $t0, arr__global_1darray_initialized_($a1)

# === #T25 = i + 1 ===
addiu $t1, $s2, 1

# === #T26 = #T24 - #T25 ===
subu $t2, $t0, $t1
# RELEASE $t0
# RELEASE $t1

# === JUMP_IF #T26!=0 label_5 ===
bne $t2, $zero, label_5
# RELEASE $t2

# === PRINT global_var_initialized int ===
lw $a0, 4($gp)
li $v0, 1
syscall

# === PRINT #ENDL ===
la $a0, newline__
li $v0, 4
syscall

# === JUMP label_6 ===
j label_6

# === LABEL label_5 ===
label_5:

# === #T29 = global_2darray_initialized[0] ===
lw $t0, arr__global_2darray_initialized_+0($zero)

# === PRINT #T29 int ===
move $a0, $t0
# RELEASE $t0
li $v0, 1
syscall

# === PRINT #ENDL ===
la $a0, newline__
li $v0, 4
syscall

# === LABEL label_6 ===
label_6:

# === i = i + 1 ===
addiu $s2, $s2, 1

# === #T32 = i - 3 ===
addiu $t0, $s2, -3

# === JUMP_IF #T32<0 label_4 ===
bltz $t0, label_4
# RELEASE $t0

# === LABEL label_3 ===
label_3:

# === SCANF n ===
li $v0, 5
syscall
move $s1, $v0

# === global_1darray_uninitialized[3] = n ===
sw $s1, arr__global_1darray_uninitialized_+12($zero)

# === #T33 = global_1darray_uninitialized[3] ===
lw $t0, arr__global_1darray_uninitialized_+12($zero)

# === PRINT #T33 int ===
move $a0, $t0
# RELEASE $t0
li $v0, 1
syscall

# === PRINT #ENDL ===
la $a0, newline__
li $v0, 4
syscall

# === RETURN ===
li $v0, 10
syscall

# === RETURN ===
li $v0, 10
syscall

# === =========END_FUNC void main========= ===
