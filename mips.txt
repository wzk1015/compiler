.data
arr__a_: .space 4000
arr__seed_: .space 12
arr_set_x_: .space 128
newline__: .asciiz "\n"
.text
li $v1, 31

# === seed[0] = 19971231 ===
li $a2, 19971231
sw $a2, arr__seed_+0($zero)

# === seed[1] = 19981013 ===
li $a2, 19981013
sw $a2, arr__seed_+4($zero)

# === seed[2] = 1000000007 ===
li $a2, 1000000007
sw $a2, arr__seed_+8($zero)

# === staticvalue = 0 ===
sw $zero, 0($gp)

# === =============FUNC int myscanf============== ===
addi $sp, $sp, -404
j main
myscanf:

# === SCANF   n ===
li $v0, 5
syscall
move $s0, $v0

# === RETURN  n ===
move $v0, $s0
jr $ra

# === =============END_FUNC int myscanf============== ===

# === =============FUNC void myprintf============== ===
myprintf:
lw $s1, 100($sp)

# === PRINT   n int ===
move $a0, $s1
li $v0, 1
syscall

# === PRINT   #ENDL ===
la $a0, newline__
li $v0, 4
syscall

# === RETURN ===
jr $ra

# === RETURN ===
jr $ra

# === =============END_FUNC void myprintf============== ===

# === =============FUNC int set============== ===
set:
lw $s2, 100($sp)
lw $s3, 104($sp)

# === @V135 = pos / 30 ===
div $s4, $s2, 30

# === i = 10 ===
li $s5, 10

# === v = 0 ===
move $s6, $zero

# === x[0] = 1 ===
li $a2, 1
sw $a2, arr_set_x_+0($zero)

# === #T1 = x[0] ===
lw $t0, arr_set_x_+0($zero)

# === #T2 = #T1 * 2 ===
sll $t1, $t0, 1
# RELEASE $t0

# === x[1] = #T2 ===
sw $t1, arr_set_x_+4($zero)
# RELEASE $t1

# === #T3 = x[1] ===
lw $t0, arr_set_x_+4($zero)

# === #T4 = #T3 * 2 ===
sll $t1, $t0, 1
# RELEASE $t0

# === x[2] = #T4 ===
sw $t1, arr_set_x_+8($zero)
# RELEASE $t1

# === #T5 = x[2] ===
lw $t0, arr_set_x_+8($zero)

# === #T6 = #T5 * 2 ===
sll $t1, $t0, 1
# RELEASE $t0

# === x[3] = #T6 ===
sw $t1, arr_set_x_+12($zero)
# RELEASE $t1

# === #T7 = x[3] ===
lw $t0, arr_set_x_+12($zero)

# === #T8 = #T7 * 2 ===
sll $t1, $t0, 1
# RELEASE $t0

# === x[4] = #T8 ===
sw $t1, arr_set_x_+16($zero)
# RELEASE $t1

# === #T9 = x[4] ===
lw $t0, arr_set_x_+16($zero)

# === #T10 = #T9 * 2 ===
sll $t1, $t0, 1
# RELEASE $t0

# === x[5] = #T10 ===
sw $t1, arr_set_x_+20($zero)
# RELEASE $t1

# === #T11 = x[5] ===
lw $t0, arr_set_x_+20($zero)

# === #T12 = #T11 * 2 ===
sll $t1, $t0, 1
# RELEASE $t0

# === x[6] = #T12 ===
sw $t1, arr_set_x_+24($zero)
# RELEASE $t1

# === #T13 = x[6] ===
lw $t0, arr_set_x_+24($zero)

# === #T14 = #T13 * 2 ===
sll $t1, $t0, 1
# RELEASE $t0

# === x[7] = #T14 ===
sw $t1, arr_set_x_+28($zero)
# RELEASE $t1

# === #T15 = x[7] ===
lw $t0, arr_set_x_+28($zero)

# === #T16 = #T15 * 2 ===
sll $t1, $t0, 1
# RELEASE $t0

# === x[8] = #T16 ===
sw $t1, arr_set_x_+32($zero)
# RELEASE $t1

# === #T17 = x[8] ===
lw $t0, arr_set_x_+32($zero)

# === #T18 = #T17 * 2 ===
sll $t1, $t0, 1
# RELEASE $t0

# === x[9] = #T18 ===
sw $t1, arr_set_x_+36($zero)
# RELEASE $t1

# === #T19 = x[9] ===
lw $t0, arr_set_x_+36($zero)

# === #T20 = #T19 * 2 ===
sll $t1, $t0, 1
# RELEASE $t0

# === x[10] = #T20 ===
sw $t1, arr_set_x_+40($zero)
# RELEASE $t1

# === #T21 = i - 30 ===
addiu $t0, $s5, -30

# === JUMP_IF  #T21>=0  label_1 ===
bgez $t0, label_1
# RELEASE $t0

# === -----LOOP BEGIN----- ===

# === LABEL   label_2 ===
label_2:

# === i = i + 1 ===
addiu $s5, $s5, 1

# === #T23 = i - 1 ===
addiu $t0, $s5, -1

# === #T24 = x[#T23] ===
sll $a1, $t0, 2
# RELEASE $t0
lw $t1, arr_set_x_($a1)

# === #T25 = #T24 * 2 ===
sll $t0, $t1, 1
# RELEASE $t1

# === x[i] = #T25 ===
sll $a1, $s5, 2
sw $t0, arr_set_x_($a1)
# RELEASE $t0

# === -----LOOP END----- ===

# === #T26 = i - 30 ===
addiu $t0, $s5, -30

# === JUMP_IF  #T26<0  label_2 ===
bltz $t0, label_2
# RELEASE $t0

# === LABEL   label_1 ===
label_1:

# === #T28 = @V135 - 1000 ===
addiu $t0, $s4, -1000

# === JUMP_IF  #T28<0  label_3 ===
bltz $t0, label_3
# RELEASE $t0

# === RETURN  0 ===
move $v0, $zero
jr $ra

# === LABEL   label_3 ===
label_3:

# === #T30 = a[@V135] ===
sll $a1, $s4, 2
lw $t0, arr__a_($a1)

# === #T32 = @V135 * 30 ===
mul $t1, $s4, 30

# === #T33 = pos - #T32 ===
subu $t2, $s2, $t1
# RELEASE $t1

# === #T34 = x[#T33] ===
sll $a1, $t2, 2
# RELEASE $t2
lw $t1, arr_set_x_($a1)

# === #T35 = #T30 / #T34 ===
bltz $t0, tmp_label_1
addiu $a3, $t1, -1
and $a3, $t1, $a3
bne $a3, $zero, tmp_label_1
clz $a3, $t1
subu $a3, $v1, $a3
srav $t2, $t0, $a3
j tmp_label_2
tmp_label_1:
div $t0, $t1
# RELEASE $t1
mflo $t2
tmp_label_2:
# RELEASE $t0
# RELEASE $t1

# === #T37 = a[@V135] ===
sll $a1, $s4, 2
lw $t0, arr__a_($a1)

# === #T39 = @V135 * 30 ===
mul $t1, $s4, 30

# === #T40 = pos - #T39 ===
subu $t3, $s2, $t1
# RELEASE $t1

# === #T41 = x[#T40] ===
sll $a1, $t3, 2
# RELEASE $t3
lw $t1, arr_set_x_($a1)

# === #T42 = #T37 / #T41 ===
bltz $t0, tmp_label_3
addiu $a3, $t1, -1
and $a3, $t1, $a3
bne $a3, $zero, tmp_label_3
clz $a3, $t1
subu $a3, $v1, $a3
srav $t3, $t0, $a3
j tmp_label_4
tmp_label_3:
div $t0, $t1
# RELEASE $t1
mflo $t3
tmp_label_4:
# RELEASE $t0
# RELEASE $t1

# === #T43 = #T42 / 2 ===
bgez $t3, tmp_label_5
# RELEASE $t3
subu $a2, $zero, $t3
# RELEASE $t3
sra $t0, $a2, 1
subu $t0, $zero, $t0
j tmp_label_6
tmp_label_5:
sra $t0, $t3, 1
# RELEASE $t3
tmp_label_6:

# === #T44 = #T43 * 2 ===
sll $t1, $t0, 1
# RELEASE $t0

# === #T45 = #T35 - #T44 ===
subu $t0, $t2, $t1
# RELEASE $t2
# RELEASE $t1

# === #T46 = #T45 - d ===
subu $t1, $t0, $s3
# RELEASE $t0

# === JUMP_IF  #T46==0  label_4 ===
beq $t1, $zero, label_4
# RELEASE $t1

# === #T48 = a[@V135] ===
sll $a1, $s4, 2
lw $t0, arr__a_($a1)

# === #T50 = @V135 * 30 ===
mul $t1, $s4, 30

# === #T51 = pos - #T50 ===
subu $t2, $s2, $t1
# RELEASE $t1

# === #T52 = x[#T51] ===
sll $a1, $t2, 2
# RELEASE $t2
lw $t1, arr_set_x_($a1)

# === #T53 = #T48 / #T52 ===
bltz $t0, tmp_label_7
addiu $a3, $t1, -1
and $a3, $t1, $a3
bne $a3, $zero, tmp_label_7
clz $a3, $t1
subu $a3, $v1, $a3
srav $t2, $t0, $a3
j tmp_label_8
tmp_label_7:
div $t0, $t1
# RELEASE $t1
mflo $t2
tmp_label_8:
# RELEASE $t0
# RELEASE $t1

# === #T55 = a[@V135] ===
sll $a1, $s4, 2
lw $t0, arr__a_($a1)

# === #T57 = @V135 * 30 ===
mul $t1, $s4, 30

# === #T58 = pos - #T57 ===
subu $t3, $s2, $t1
# RELEASE $t1

# === #T59 = x[#T58] ===
sll $a1, $t3, 2
# RELEASE $t3
lw $t1, arr_set_x_($a1)

# === #T60 = #T55 / #T59 ===
bltz $t0, tmp_label_9
addiu $a3, $t1, -1
and $a3, $t1, $a3
bne $a3, $zero, tmp_label_9
clz $a3, $t1
subu $a3, $v1, $a3
srav $t3, $t0, $a3
j tmp_label_10
tmp_label_9:
div $t0, $t1
# RELEASE $t1
mflo $t3
tmp_label_10:
# RELEASE $t0
# RELEASE $t1

# === #T61 = #T60 / 2 ===
bgez $t3, tmp_label_11
# RELEASE $t3
subu $a2, $zero, $t3
# RELEASE $t3
sra $t0, $a2, 1
subu $t0, $zero, $t0
j tmp_label_12
tmp_label_11:
sra $t0, $t3, 1
# RELEASE $t3
tmp_label_12:

# === #T62 = #T61 * 2 ===
sll $t1, $t0, 1
# RELEASE $t0

# === #T63 = #T53 - #T62 ===
subu $t0, $t2, $t1
# RELEASE $t2
# RELEASE $t1

# === #T64 = #T63 ===
move $t1, $t0
# RELEASE $t0

# === JUMP_IF  #T64!=0  label_5 ===
bne $t1, $zero, label_5
# RELEASE $t1

# === #T65 = d - 1 ===
addiu $t0, $s3, -1

# === JUMP_IF  #T65!=0  label_6 ===
bne $t0, $zero, label_6
# RELEASE $t0

# === #T67 = @V135 * 30 ===
mul $t0, $s4, 30

# === #T68 = pos - #T67 ===
subu $t1, $s2, $t0
# RELEASE $t0

# === v = x[#T68] ===
sll $a1, $t1, 2
# RELEASE $t1
lw $s6, arr_set_x_($a1)

# === LABEL   label_6 ===
label_6:

# === LABEL   label_5 ===
label_5:

# === #T71 = a[@V135] ===
sll $a1, $s4, 2
lw $t0, arr__a_($a1)

# === #T73 = @V135 * 30 ===
mul $t1, $s4, 30

# === #T74 = pos - #T73 ===
subu $t2, $s2, $t1
# RELEASE $t1

# === #T75 = x[#T74] ===
sll $a1, $t2, 2
# RELEASE $t2
lw $t1, arr_set_x_($a1)

# === #T76 = #T71 / #T75 ===
bltz $t0, tmp_label_13
addiu $a3, $t1, -1
and $a3, $t1, $a3
bne $a3, $zero, tmp_label_13
clz $a3, $t1
subu $a3, $v1, $a3
srav $t2, $t0, $a3
j tmp_label_14
tmp_label_13:
div $t0, $t1
# RELEASE $t1
mflo $t2
tmp_label_14:
# RELEASE $t0
# RELEASE $t1

# === #T78 = a[@V135] ===
sll $a1, $s4, 2
lw $t0, arr__a_($a1)

# === #T80 = @V135 * 30 ===
mul $t1, $s4, 30

# === #T81 = pos - #T80 ===
subu $t3, $s2, $t1
# RELEASE $t1

# === #T82 = x[#T81] ===
sll $a1, $t3, 2
# RELEASE $t3
lw $t1, arr_set_x_($a1)

# === #T83 = #T78 / #T82 ===
bltz $t0, tmp_label_15
addiu $a3, $t1, -1
and $a3, $t1, $a3
bne $a3, $zero, tmp_label_15
clz $a3, $t1
subu $a3, $v1, $a3
srav $t3, $t0, $a3
j tmp_label_16
tmp_label_15:
div $t0, $t1
# RELEASE $t1
mflo $t3
tmp_label_16:
# RELEASE $t0
# RELEASE $t1

# === #T84 = #T83 / 2 ===
bgez $t3, tmp_label_17
# RELEASE $t3
subu $a2, $zero, $t3
# RELEASE $t3
sra $t0, $a2, 1
subu $t0, $zero, $t0
j tmp_label_18
tmp_label_17:
sra $t0, $t3, 1
# RELEASE $t3
tmp_label_18:

# === #T85 = #T84 * 2 ===
sll $t1, $t0, 1
# RELEASE $t0

# === #T86 = #T76 - #T85 ===
subu $t0, $t2, $t1
# RELEASE $t2
# RELEASE $t1

# === #T87 = #T86 - 1 ===
addiu $t1, $t0, -1
# RELEASE $t0

# === JUMP_IF  #T87!=0  label_7 ===
bne $t1, $zero, label_7
# RELEASE $t1

# === #T88 = d ===
move $t0, $s3

# === JUMP_IF  #T88!=0  label_8 ===
bne $t0, $zero, label_8
# RELEASE $t0

# === #T90 = @V135 * 30 ===
mul $t0, $s4, 30

# === #T91 = pos - #T90 ===
subu $t1, $s2, $t0
# RELEASE $t0

# === #T92 = x[#T91] ===
sll $a1, $t1, 2
# RELEASE $t1
lw $t0, arr_set_x_($a1)

# === v = v - #T92 ===
subu $s6, $s6, $t0
# RELEASE $t0

# === LABEL   label_8 ===
label_8:

# === LABEL   label_7 ===
label_7:

# === LABEL   label_4 ===
label_4:

# === #T94 = @V135 ===
move $t0, $s4

# === #T96 = a[@V135] ===
sll $a1, $s4, 2
lw $t1, arr__a_($a1)

# === #T97 = #T96 + v ===
addu $t2, $t1, $s6
# RELEASE $t1

# === a[#T94] = #T97 ===
sll $a1, $t0, 2
# RELEASE $t0
sw $t2, arr__a_($a1)
# RELEASE $t2

# === RETURN  0 ===
move $v0, $zero
jr $ra

# === =============END_FUNC int set============== ===

# === =============FUNC int rand============== ===
rand:

# === #T98 = seed[0] ===
lw $t0, arr__seed_+0($zero)

# === #T99 = staticvalue * #T98 ===
lw $a1, 0($gp)
mul $t1, $a1, $t0
# RELEASE $t0

# === #T100 = seed[1] ===
lw $t0, arr__seed_+4($zero)

# === staticvalue = #T99 + #T100 ===
addu $a1, $t1, $t0
# RELEASE $t1
# RELEASE $t0
sw $a1, 0($gp)

# === #T102 = seed[2] ===
lw $t0, arr__seed_+8($zero)

# === #T103 = staticvalue / #T102 ===
lw $a1, 0($gp)
bltz $a1, tmp_label_19
addiu $a3, $t0, -1
and $a3, $t0, $a3
bne $a3, $zero, tmp_label_19
clz $a3, $t0
subu $a3, $v1, $a3
srav $t1, $a1, $a3
j tmp_label_20
tmp_label_19:
div $a1, $t0
# RELEASE $t0
mflo $t1
tmp_label_20:
# RELEASE $t0

# === #T104 = seed[2] ===
lw $t0, arr__seed_+8($zero)

# === #T105 = #T103 * #T104 ===
mul $t2, $t1, $t0
# RELEASE $t1
# RELEASE $t0

# === staticvalue = staticvalue - #T105 ===
lw $a1, 0($gp)
subu $a1, $a1, $t2
# RELEASE $t2
sw $a1, 0($gp)

# === #T107 = staticvalue ===
lw $t0, 0($gp)

# === JUMP_IF  #T107>=0  label_9 ===
bgez $t0, label_9
# RELEASE $t0

# === #T108 = seed[2] ===
lw $t0, arr__seed_+8($zero)

# === staticvalue = #T108 + staticvalue ===
lw $a1, 0($gp)
addu $a1, $t0, $a1
# RELEASE $t0
sw $a1, 0($gp)

# === LABEL   label_9 ===
label_9:

# === RETURN  staticvalue ===
lw $v0, 0($gp)
jr $ra

# === =============END_FUNC int rand============== ===

# === =============FUNC void main============== ===
lw $fp, 0($gp)
main:

# === tmp = 0 ===
move $s7, $zero

# === i = 0 ===
move $t4, $zero

# === SCANF   _1_n ===
li $v0, 5
syscall
move $t5, $v0

# === %RET = _1_n ===
move $v0, $t5

# === LABEL   label_14 ===
label_14:

# === n = %RET ===
move $t6, $v0

# === SCANF   _2_n ===
li $v0, 5
syscall
move $t7, $v0

# === %RET = _2_n ===
move $v0, $t7

# === LABEL   label_15 ===
label_15:

# === staticvalue = %RET ===
move $fp, $v0

# === #T112 = n ===
move $t0, $t6

# === JUMP_IF  #T112<=0  label_10 ===
blez $t0, label_10
# RELEASE $t0

# === -----LOOP BEGIN----- ===

# === LABEL   label_11 ===
label_11:

# === n = n - 1 ===
addiu $t6, $t6, -1

# === _3_#T98 = seed[0] ===
lw $t0, arr__seed_+0($zero)

# === _3_#T99 = staticvalue * _3_#T98 ===
mul $t1, $fp, $t0
# RELEASE $t0

# === _3_#T100 = seed[1] ===
lw $t0, arr__seed_+4($zero)

# === staticvalue = _3_#T99 + _3_#T100 ===
addu $fp, $t1, $t0
# RELEASE $t1
# RELEASE $t0

# === _3_#T102 = seed[2] ===
lw $t0, arr__seed_+8($zero)

# === _3_#T103 = staticvalue / _3_#T102 ===
bltz $fp, tmp_label_21
addiu $a3, $t0, -1
and $a3, $t0, $a3
bne $a3, $zero, tmp_label_21
clz $a3, $t0
subu $a3, $v1, $a3
srav $t1, $fp, $a3
j tmp_label_22
tmp_label_21:
div $fp, $t0
# RELEASE $t0
mflo $t1
tmp_label_22:
# RELEASE $t0

# === _3_#T104 = seed[2] ===
lw $t0, arr__seed_+8($zero)

# === _3_#T105 = _3_#T103 * _3_#T104 ===
mul $t2, $t1, $t0
# RELEASE $t1
# RELEASE $t0

# === staticvalue = staticvalue - _3_#T105 ===
subu $fp, $fp, $t2
# RELEASE $t2

# === _3_#T107 = staticvalue ===
move $t0, $fp

# === JUMP_IF  _3_#T107>=0  label_9_3_ ===
bgez $t0, label_9_3_
# RELEASE $t0

# === _3_#T108 = seed[2] ===
lw $t0, arr__seed_+8($zero)

# === staticvalue = _3_#T108 + staticvalue ===
addu $fp, $t0, $fp
# RELEASE $t0

# === LABEL   label_9_3_ ===
label_9_3_:

# === %RET = staticvalue ===
move $v0, $fp

# === LABEL   label_16 ===
label_16:

# === z = %RET ===
move $t8, $v0

# === #T115 = z / 300000 ===
div $t0, $t8, 300000

# === #T116 = #T115 * 300000 ===
mul $t1, $t0, 300000
# RELEASE $t0

# === x = z - #T116 ===
subu $t9, $t8, $t1
# RELEASE $t1

# === _4_#T98 = seed[0] ===
lw $t0, arr__seed_+0($zero)

# === _4_#T99 = staticvalue * _4_#T98 ===
mul $t1, $fp, $t0
# RELEASE $t0

# === _4_#T100 = seed[1] ===
lw $t0, arr__seed_+4($zero)

# === staticvalue = _4_#T99 + _4_#T100 ===
addu $fp, $t1, $t0
# RELEASE $t1
# RELEASE $t0

# === _4_#T102 = seed[2] ===
lw $t0, arr__seed_+8($zero)

# === _4_#T103 = staticvalue / _4_#T102 ===
bltz $fp, tmp_label_23
addiu $a3, $t0, -1
and $a3, $t0, $a3
bne $a3, $zero, tmp_label_23
clz $a3, $t0
subu $a3, $v1, $a3
srav $t1, $fp, $a3
j tmp_label_24
tmp_label_23:
div $fp, $t0
# RELEASE $t0
mflo $t1
tmp_label_24:
# RELEASE $t0

# === _4_#T104 = seed[2] ===
lw $t0, arr__seed_+8($zero)

# === _4_#T105 = _4_#T103 * _4_#T104 ===
mul $t2, $t1, $t0
# RELEASE $t1
# RELEASE $t0

# === staticvalue = staticvalue - _4_#T105 ===
subu $fp, $fp, $t2
# RELEASE $t2

# === _4_#T107 = staticvalue ===
move $t0, $fp

# === JUMP_IF  _4_#T107>=0  label_9_4_ ===
bgez $t0, label_9_4_
# RELEASE $t0

# === _4_#T108 = seed[2] ===
lw $t0, arr__seed_+8($zero)

# === staticvalue = _4_#T108 + staticvalue ===
addu $fp, $t0, $fp
# RELEASE $t0

# === LABEL   label_9_4_ ===
label_9_4_:

# === %RET = staticvalue ===
move $v0, $fp

# === LABEL   label_17 ===
label_17:

# === z = %RET ===
move $t8, $v0

# === #T119 = z / 2 ===
bgez $t8, tmp_label_25
subu $a2, $zero, $t8
sra $t0, $a2, 1
subu $t0, $zero, $t0
j tmp_label_26
tmp_label_25:
sra $t0, $t8, 1
tmp_label_26:

# === #T120 = #T119 * 2 ===
sll $t1, $t0, 1
# RELEASE $t0

# === y = z - #T120 ===
subu $k0, $t8, $t1
# RELEASE $t1

# === PREPARE_CALL set ===
addi $sp, $sp, -736

# === PUSH_PARA x ===
sw $t9, 100($sp)

# === PUSH_PARA y ===
sw $k0, 104($sp)

# === CALL    set ===
jal set
addi $sp, $sp, 736

# === -----LOOP END----- ===

# === #T122 = n ===
move $t0, $t6

# === JUMP_IF  #T122>0  label_11 ===
bgtz $t0, label_11
# RELEASE $t0

# === LABEL   label_10 ===
label_10:

# === #T123 = i - 1000 ===
addiu $t0, $t4, -1000

# === JUMP_IF  #T123>=0  label_12 ===
bgez $t0, label_12
# RELEASE $t0

# === -----LOOP BEGIN----- ===

# === LABEL   label_13 ===
label_13:

# === #T124 = a[i] ===
sll $a1, $t4, 2
lw $t0, arr__a_($a1)

# === #T125 = a[i] ===
sll $a1, $t4, 2
lw $t1, arr__a_($a1)

# === #T126 = #T125 / 100000 ===
div $t2, $t1, 100000
# RELEASE $t1

# === #T127 = #T126 * 100000 ===
mul $t1, $t2, 100000
# RELEASE $t2

# === #T128 = #T124 - #T127 ===
subu $t2, $t0, $t1
# RELEASE $t0
# RELEASE $t1

# === tmp = tmp + #T128 ===
addu $s7, $s7, $t2
# RELEASE $t2

# === #T130 = tmp / 100000 ===
div $t0, $s7, 100000

# === #T131 = #T130 * 100000 ===
mul $t1, $t0, 100000
# RELEASE $t0

# === tmp = tmp - #T131 ===
subu $s7, $s7, $t1
# RELEASE $t1

# === i = i + 1 ===
addiu $t4, $t4, 1

# === -----LOOP END----- ===

# === #T134 = i - 1000 ===
addiu $t0, $t4, -1000

# === JUMP_IF  #T134<0  label_13 ===
bltz $t0, label_13
# RELEASE $t0

# === LABEL   label_12 ===
label_12:

# === PRINT   tmp int ===
move $a0, $s7
li $v0, 1
syscall

# === PRINT   #ENDL ===
la $a0, newline__
li $v0, 4
syscall

# === LABEL   label_18 ===
label_18:

# === RETURN ===
li $v0, 10
syscall

# === RETURN ===
li $v0, 10
syscall

# === =============END_FUNC void main============== ===
