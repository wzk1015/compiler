.data
arr__a_: .space 4000
arr__b_: .space 4000
arr__kernelid_: .space 160
str__0: .asciiz "in checkrange, num="
str__1: .asciiz "out checkrange, num="
str__2: .asciiz "running convn, kernelid="
str__3: .asciiz "flag1 loop\n"
str__4: .asciiz "flag2 loop\n"
str__5: .asciiz "flag3 loop\n"
str__6: .asciiz "flag4 loop\n"
str__7: .asciiz "next flag4 loop\n"
str__8: .asciiz "next flag3 loop\n"
str__9: .asciiz "next flag2 loop\n"
str__10: .asciiz "next flag1 loop\n"
str__11: .asciiz "end running convn\n"
str__12: .asciiz "task is"
str__13: .asciiz "running task"
newline__: .asciiz "\n"
.text

# === =========FUNC int myscanf========= ===
addi $sp, $sp, -304
j main
myscanf:

# === SCANF n ===
li $v0, 5
syscall
move $s0, $v0

# === RETURN n ===
move $v0, $s0
jr $ra

# === =========END_FUNC int myscanf========= ===

# === =========FUNC void myprintf========= ===
myprintf:
lw $s0, 100($sp)

# === PRINT n int ===
move $a0, $s0
li $v0, 1
syscall

# === PRINT #ENDL ===
la $a0, newline__
li $v0, 4
syscall

# === RETURN ===
jr $ra

# === RETURN ===
jr $ra

# === =========END_FUNC void myprintf========= ===

# === =========FUNC int checkrange========= ===
checkrange:
lw $s0, 100($sp)

# === JUMP_IF -1<=0 label_1 ===
j label_1

# === PRINT 0 strcon ===
la $a0, str__0
li $v0, 4
syscall

# === PRINT num int ===
move $a0, $s0
li $v0, 1
syscall

# === PRINT #ENDL ===
la $a0, newline__
li $v0, 4
syscall

# === LABEL label_1 ===
label_1:

# === LABEL label_2 ===
label_2:

# === #T2 = num - 1073741824 ===
subu $t0, $s0, 1073741824

# === JUMP_IF #T2<=0 label_3 ===
blez $t0, label_3
# RELEASE $t0

# === num = num - 1073741824 ===
subu $s0, $s0, 1073741824

# === JUMP label_2 ===
j label_2

# === LABEL label_3 ===
label_3:

# === LABEL label_4 ===
label_4:

# === #T4 = num ===
move $t0, $s0

# === JUMP_IF #T4>=0 label_5 ===
bgez $t0, label_5
# RELEASE $t0

# === num = num + 1073741824 ===
addu $s0, $s0, 1073741824

# === JUMP label_4 ===
j label_4

# === LABEL label_5 ===
label_5:

# === JUMP_IF -1<=0 label_6 ===
j label_6

# === PRINT 1 strcon ===
la $a0, str__1
li $v0, 4
syscall

# === PRINT num int ===
move $a0, $s0
li $v0, 1
syscall

# === PRINT #ENDL ===
la $a0, newline__
li $v0, 4
syscall

# === LABEL label_6 ===
label_6:

# === RETURN num ===
move $v0, $s0
jr $ra

# === =========END_FUNC int checkrange========= ===

# === =========FUNC int reduce========= ===
reduce:
lw $s0, 100($sp)
lw $s1, 104($sp)
lw $s2, 108($sp)

# === #T7 = kernelid ===
move $t0, $s0

# === JUMP_IF #T7!=0 label_7 ===
bne $t0, $zero, label_7
# RELEASE $t0

# === PREPARE_CALL checkrange ===
addi $sp, $sp, -228

# === #T8 = x + y ===
addu $t0, $s1, $s2

# === PUSH_PARA #T8 ===
sw $t0, 100($sp)
# RELEASE $t0

# === CALL checkrange ===
sw $s0, 24($sp)
sw $s1, 28($sp)
sw $s2, 32($sp)
sw $ra, 0($sp)
jal checkrange
lw $ra, 0($sp)
lw $s0, 24($sp)
lw $s1, 28($sp)
lw $s2, 32($sp)
addi $sp, $sp, 228

# === #T9 = %RET ===
move $t0, $v0

# === RETURN #T9 ===
move $v0, $t0
# RELEASE $t0
jr $ra

# === LABEL label_7 ===
label_7:

# === #T10 = kernelid - 1 ===
subu $t0, $s0, 1

# === JUMP_IF #T10!=0 label_8 ===
bne $t0, $zero, label_8
# RELEASE $t0

# === ret = 0 ===
move $s3, $zero

# === i = 1 ===
li $s4, 1

# === LABEL label_9 ===
label_9:

# === #T11 = i - 1073741824 ===
subu $t0, $s4, 1073741824

# === JUMP_IF #T11>=0 label_10 ===
bgez $t0, label_10
# RELEASE $t0

# === #T12 = x / i ===
div $t0, $s1, $s4

# === #T13 = x / i ===
div $t1, $s1, $s4

# === #T14 = #T13 / 2 ===
div $t2, $t1, 2
# RELEASE $t1

# === #T15 = #T14 * 2 ===
sll $t1, $t2, 1
# RELEASE $t2

# === #T16 = #T12 - #T15 ===
subu $t2, $t0, $t1
# RELEASE $t0
# RELEASE $t1

# === #T17 = y / i ===
div $t0, $s2, $s4

# === #T18 = y / i ===
div $t1, $s2, $s4

# === #T19 = #T18 / 2 ===
div $t3, $t1, 2
# RELEASE $t1

# === #T20 = #T19 * 2 ===
sll $t1, $t3, 1
# RELEASE $t3

# === #T21 = #T17 - #T20 ===
subu $t3, $t0, $t1
# RELEASE $t0
# RELEASE $t1

# === #T22 = #T16 - #T21 ===
subu $t0, $t2, $t3
# RELEASE $t2
# RELEASE $t3

# === JUMP_IF #T22!=0 label_11 ===
bne $t0, $zero, label_11
# RELEASE $t0

# === ret = ret * 2 ===
sll $s3, $s3, 1

# === JUMP label_12 ===
j label_12

# === LABEL label_11 ===
label_11:

# === #T24 = ret * 2 ===
sll $t0, $s3, 1

# === ret = #T24 + 1 ===
addu $s3, $t0, 1
# RELEASE $t0

# === LABEL label_12 ===
label_12:

# === i = i * 2 ===
sll $s4, $s4, 1

# === JUMP label_9 ===
j label_9

# === LABEL label_10 ===
label_10:

# === RETURN ret ===
move $v0, $s3
jr $ra

# === LABEL label_8 ===
label_8:

# === #T27 = kernelid - 2 ===
subu $t0, $s0, 2

# === JUMP_IF #T27!=0 label_13 ===
bne $t0, $zero, label_13
# RELEASE $t0

# === #T28 = x - y ===
subu $t0, $s1, $s2

# === JUMP_IF #T28<=0 label_14 ===
blez $t0, label_14
# RELEASE $t0

# === RETURN x ===
move $v0, $s1
jr $ra

# === JUMP label_15 ===
j label_15

# === LABEL label_14 ===
label_14:

# === RETURN y ===
move $v0, $s2
jr $ra

# === LABEL label_15 ===
label_15:

# === LABEL label_13 ===
label_13:

# === #T29 = kernelid - 3 ===
subu $t0, $s0, 3

# === JUMP_IF #T29!=0 label_16 ===
bne $t0, $zero, label_16
# RELEASE $t0

# === ret = 0 ===
move $s3, $zero

# === i = 1 ===
li $s4, 1

# === LABEL label_17 ===
label_17:

# === #T30 = i - 1073741824 ===
subu $t0, $s4, 1073741824

# === JUMP_IF #T30>=0 label_18 ===
bgez $t0, label_18
# RELEASE $t0

# === #T31 = x / i ===
div $t0, $s1, $s4

# === #T32 = x / i ===
div $t1, $s1, $s4

# === #T33 = #T32 / 2 ===
div $t2, $t1, 2
# RELEASE $t1

# === #T34 = #T33 * 2 ===
sll $t1, $t2, 1
# RELEASE $t2

# === #T35 = #T31 - #T34 ===
subu $t2, $t0, $t1
# RELEASE $t0
# RELEASE $t1

# === #T36 = #T35 - 1 ===
subu $t0, $t2, 1
# RELEASE $t2

# === JUMP_IF #T36!=0 label_19 ===
bne $t0, $zero, label_19
# RELEASE $t0

# === #T37 = ret * 2 ===
sll $t0, $s3, 1

# === ret = #T37 + 1 ===
addu $s3, $t0, 1
# RELEASE $t0

# === JUMP label_20 ===
j label_20

# === LABEL label_19 ===
label_19:

# === #T39 = y / i ===
div $t0, $s2, $s4

# === #T40 = y / i ===
div $t1, $s2, $s4

# === #T41 = #T40 / 2 ===
div $t2, $t1, 2
# RELEASE $t1

# === #T42 = #T41 * 2 ===
sll $t1, $t2, 1
# RELEASE $t2

# === #T43 = #T39 - #T42 ===
subu $t2, $t0, $t1
# RELEASE $t0
# RELEASE $t1

# === #T44 = #T43 - 1 ===
subu $t0, $t2, 1
# RELEASE $t2

# === JUMP_IF #T44!=0 label_21 ===
bne $t0, $zero, label_21
# RELEASE $t0

# === #T45 = ret * 2 ===
sll $t0, $s3, 1

# === ret = #T45 + 1 ===
addu $s3, $t0, 1
# RELEASE $t0

# === LABEL label_21 ===
label_21:

# === ret = ret * 2 ===
sll $s3, $s3, 1

# === LABEL label_20 ===
label_20:

# === i = i * 2 ===
sll $s4, $s4, 1

# === JUMP label_17 ===
j label_17

# === LABEL label_18 ===
label_18:

# === RETURN ret ===
move $v0, $s3
jr $ra

# === LABEL label_16 ===
label_16:

# === #T49 = kernelid - 4 ===
subu $t0, $s0, 4

# === JUMP_IF #T49!=0 label_22 ===
bne $t0, $zero, label_22
# RELEASE $t0

# === ret = 0 ===
move $s3, $zero

# === i = 1 ===
li $s4, 1

# === LABEL label_23 ===
label_23:

# === #T50 = i - 1073741824 ===
subu $t0, $s4, 1073741824

# === JUMP_IF #T50>=0 label_24 ===
bgez $t0, label_24
# RELEASE $t0

# === #T51 = x / i ===
div $t0, $s1, $s4

# === #T52 = x / i ===
div $t1, $s1, $s4

# === #T53 = #T52 / 2 ===
div $t2, $t1, 2
# RELEASE $t1

# === #T54 = #T53 * 2 ===
sll $t1, $t2, 1
# RELEASE $t2

# === #T55 = #T51 - #T54 ===
subu $t2, $t0, $t1
# RELEASE $t0
# RELEASE $t1

# === #T56 = #T55 - 1 ===
subu $t0, $t2, 1
# RELEASE $t2

# === JUMP_IF #T56!=0 label_25 ===
bne $t0, $zero, label_25
# RELEASE $t0

# === #T57 = y / i ===
div $t0, $s2, $s4

# === #T58 = y / i ===
div $t1, $s2, $s4

# === #T59 = #T58 / 2 ===
div $t2, $t1, 2
# RELEASE $t1

# === #T60 = #T59 * 2 ===
sll $t1, $t2, 1
# RELEASE $t2

# === #T61 = #T57 - #T60 ===
subu $t2, $t0, $t1
# RELEASE $t0
# RELEASE $t1

# === #T62 = #T61 - 1 ===
subu $t0, $t2, 1
# RELEASE $t2

# === JUMP_IF #T62!=0 label_26 ===
bne $t0, $zero, label_26
# RELEASE $t0

# === #T63 = ret * 2 ===
sll $t0, $s3, 1

# === ret = #T63 + 1 ===
addu $s3, $t0, 1
# RELEASE $t0

# === JUMP label_27 ===
j label_27

# === LABEL label_26 ===
label_26:

# === ret = ret * 2 ===
sll $s3, $s3, 1

# === LABEL label_27 ===
label_27:

# === JUMP label_28 ===
j label_28

# === LABEL label_25 ===
label_25:

# === ret = ret * 2 ===
sll $s3, $s3, 1

# === LABEL label_28 ===
label_28:

# === i = i * 2 ===
sll $s4, $s4, 1

# === JUMP label_23 ===
j label_23

# === LABEL label_24 ===
label_24:

# === RETURN ret ===
move $v0, $s3
jr $ra

# === LABEL label_22 ===
label_22:

# === RETURN 0 ===
move $v0, $zero
jr $ra

# === =========END_FUNC int reduce========= ===

# === =========FUNC int getvalue========= ===
getvalue:
lw $s0, 100($sp)
lw $s1, 104($sp)
lw $s2, 108($sp)
lw $s3, 112($sp)

# === #T68 = x ===
move $t0, $s2

# === JUMP_IF #T68>=0 label_29 ===
bgez $t0, label_29
# RELEASE $t0

# === RETURN 0 ===
move $v0, $zero
jr $ra

# === LABEL label_29 ===
label_29:

# === #T69 = y ===
move $t0, $s3

# === JUMP_IF #T69>=0 label_30 ===
bgez $t0, label_30
# RELEASE $t0

# === RETURN 0 ===
move $v0, $zero
jr $ra

# === LABEL label_30 ===
label_30:

# === #T70 = x - n ===
subu $t0, $s2, $s0

# === JUMP_IF #T70<0 label_31 ===
bltz $t0, label_31
# RELEASE $t0

# === RETURN 0 ===
move $v0, $zero
jr $ra

# === LABEL label_31 ===
label_31:

# === #T71 = y - m ===
subu $t0, $s3, $s1

# === JUMP_IF #T71<0 label_32 ===
bltz $t0, label_32
# RELEASE $t0

# === RETURN 0 ===
move $v0, $zero
jr $ra

# === LABEL label_32 ===
label_32:

# === #T72 = x * m ===
mul $t0, $s2, $s1

# === #T73 = #T72 + y ===
addu $t1, $t0, $s3
# RELEASE $t0

# === #T74 = a[#T73] ===
sll $k0, $t1, 2
# RELEASE $t1
lw $t0, arr__a_($k0)

# === RETURN #T74 ===
move $v0, $t0
# RELEASE $t0
jr $ra

# === =========END_FUNC int getvalue========= ===

# === =========FUNC int convn========= ===
convn:
lw $s0, 100($sp)
lw $s1, 104($sp)
lw $s2, 108($sp)
lw $s3, 112($sp)

# === i = 0 ===
move $s4, $zero

# === j = 0 ===
move $s5, $zero

# === flag1 = 1 ===
li $s6, 1

# === flag2 = 1 ===
li $s7, 1

# === flag3 = 1 ===
li $k0, 1
sw $k0, 144($sp)

# === flag4 = 1 ===
li $k0, 1
sw $k0, 148($sp)

# === PRINT 2 strcon ===
la $a0, str__2
li $v0, 4
syscall

# === PRINT kernelid int ===
move $a0, $s0
li $v0, 1
syscall

# === PRINT #ENDL ===
la $a0, newline__
li $v0, 4
syscall

# === LABEL label_33 ===
label_33:

# === #T75 = flag1 - 1 ===
subu $t0, $s6, 1

# === JUMP_IF #T75!=0 label_34 ===
bne $t0, $zero, label_34
# RELEASE $t0

# === #T76 = kernelid - 9990 ===
subu $t0, $s0, 9990

# === JUMP_IF #T76!=0 label_35 ===
bne $t0, $zero, label_35
# RELEASE $t0

# === PRINT 3 strcon ===
la $a0, str__3
li $v0, 4
syscall

# === LABEL label_35 ===
label_35:

# === j = 0 ===
move $s5, $zero

# === LABEL label_36 ===
label_36:

# === #T77 = flag2 - 1 ===
subu $t0, $s7, 1

# === JUMP_IF #T77!=0 label_37 ===
bne $t0, $zero, label_37
# RELEASE $t0

# === #T78 = kernelid - 9990 ===
subu $t0, $s0, 9990

# === JUMP_IF #T78!=0 label_38 ===
bne $t0, $zero, label_38
# RELEASE $t0

# === PRINT 4 strcon ===
la $a0, str__4
li $v0, 4
syscall

# === LABEL label_38 ===
label_38:

# === curr = 0 ===
sw $zero, 132($sp)

# === #T79 = c / 2 ===
div $t0, $s3, 2

# === x = i - #T79 ===
subu $k0, $s4, $t0
# RELEASE $t0
sw $k0, 124($sp)

# === LABEL label_39 ===
label_39:

# === #T81 = flag3 - 1 ===
lw $k0, 144($sp)
subu $t0, $k0, 1

# === JUMP_IF #T81!=0 label_40 ===
bne $t0, $zero, label_40
# RELEASE $t0

# === #T82 = kernelid - 9990 ===
subu $t0, $s0, 9990

# === JUMP_IF #T82!=0 label_41 ===
bne $t0, $zero, label_41
# RELEASE $t0

# === PRINT 5 strcon ===
la $a0, str__5
li $v0, 4
syscall

# === LABEL label_41 ===
label_41:

# === #T83 = c / 2 ===
div $t0, $s3, 2

# === y = j - #T83 ===
subu $k0, $s5, $t0
# RELEASE $t0
sw $k0, 128($sp)

# === LABEL label_42 ===
label_42:

# === #T85 = flag4 - 1 ===
lw $k0, 148($sp)
subu $t0, $k0, 1

# === JUMP_IF #T85!=0 label_43 ===
bne $t0, $zero, label_43
# RELEASE $t0

# === #T86 = kernelid - 9990 ===
subu $t0, $s0, 9990

# === JUMP_IF #T86!=0 label_44 ===
bne $t0, $zero, label_44
# RELEASE $t0

# === PRINT 6 strcon ===
la $a0, str__6
li $v0, 4
syscall

# === LABEL label_44 ===
label_44:

# === PREPARE_CALL reduce ===
addi $sp, $sp, -464

# === PUSH_PARA kernelid ===
sw $s0, 100($sp)

# === PUSH_PARA curr ===
lw $k0, 596($sp)
sw $k0, 104($sp)

# === PREPARE_CALL getvalue ===
addi $sp, $sp, -244

# === PUSH_PARA n ===
sw $s1, 100($sp)

# === PUSH_PARA m ===
sw $s2, 104($sp)

# === PUSH_PARA x ===
lw $k0, 832($sp)
sw $k0, 108($sp)

# === PUSH_PARA y ===
lw $k0, 836($sp)
sw $k0, 112($sp)

# === CALL getvalue ===
sw $s0, 24($sp)
sw $s1, 28($sp)
sw $s2, 32($sp)
sw $s3, 36($sp)
sw $s4, 40($sp)
sw $s5, 44($sp)
sw $s6, 48($sp)
sw $s7, 52($sp)
sw $ra, 0($sp)
jal getvalue
lw $ra, 0($sp)
lw $s0, 24($sp)
lw $s1, 28($sp)
lw $s2, 32($sp)
lw $s3, 36($sp)
lw $s4, 40($sp)
lw $s5, 44($sp)
lw $s6, 48($sp)
lw $s7, 52($sp)
addi $sp, $sp, 244

# === #T87 = %RET ===
move $t0, $v0

# === PUSH_PARA #T87 ===
sw $t0, 108($sp)
# RELEASE $t0

# === CALL reduce ===
sw $s0, 24($sp)
sw $s1, 28($sp)
sw $s2, 32($sp)
sw $s3, 36($sp)
sw $s4, 40($sp)
sw $s5, 44($sp)
sw $s6, 48($sp)
sw $s7, 52($sp)
sw $ra, 0($sp)
jal reduce
lw $ra, 0($sp)
lw $s0, 24($sp)
lw $s1, 28($sp)
lw $s2, 32($sp)
lw $s3, 36($sp)
lw $s4, 40($sp)
lw $s5, 44($sp)
lw $s6, 48($sp)
lw $s7, 52($sp)
addi $sp, $sp, 464

# === curr = %RET ===
sw $v0, 132($sp)

# === y = y + 1 ===
lw $k0, 128($sp)
addu $k0, $k0, 1
sw $k0, 128($sp)

# === #T90 = c / 2 ===
div $t0, $s3, 2

# === #T91 = j + #T90 ===
addu $t1, $s5, $t0
# RELEASE $t0

# === #T92 = y - #T91 ===
lw $k0, 128($sp)
subu $t0, $k0, $t1
# RELEASE $t1

# === JUMP_IF #T92<0 label_45 ===
bltz $t0, label_45
# RELEASE $t0

# === flag4 = 0 ===
sw $zero, 148($sp)

# === LABEL label_45 ===
label_45:

# === #T93 = kernelid - 9990 ===
subu $t0, $s0, 9990

# === JUMP_IF #T93!=0 label_46 ===
bne $t0, $zero, label_46
# RELEASE $t0

# === PRINT 7 strcon ===
la $a0, str__7
li $v0, 4
syscall

# === LABEL label_46 ===
label_46:

# === JUMP label_42 ===
j label_42

# === LABEL label_43 ===
label_43:

# === flag4 = 1 ===
li $k0, 1
sw $k0, 148($sp)

# === x = x + 1 ===
lw $k0, 124($sp)
addu $k0, $k0, 1
sw $k0, 124($sp)

# === #T95 = c / 2 ===
div $t0, $s3, 2

# === #T96 = i + #T95 ===
addu $t1, $s4, $t0
# RELEASE $t0

# === #T97 = x - #T96 ===
lw $k0, 124($sp)
subu $t0, $k0, $t1
# RELEASE $t1

# === JUMP_IF #T97<0 label_47 ===
bltz $t0, label_47
# RELEASE $t0

# === flag3 = 0 ===
sw $zero, 144($sp)

# === LABEL label_47 ===
label_47:

# === #T98 = kernelid - 9990 ===
subu $t0, $s0, 9990

# === JUMP_IF #T98!=0 label_48 ===
bne $t0, $zero, label_48
# RELEASE $t0

# === PRINT 8 strcon ===
la $a0, str__8
li $v0, 4
syscall

# === LABEL label_48 ===
label_48:

# === JUMP label_39 ===
j label_39

# === LABEL label_40 ===
label_40:

# === flag3 = 1 ===
li $k0, 1
sw $k0, 144($sp)

# === #T99 = i * m ===
mul $t0, $s4, $s2

# === #T100 = #T99 + j ===
addu $t1, $t0, $s5
# RELEASE $t0

# === b[#T100] = curr ===
sll $k0, $t1, 2
# RELEASE $t1
lw $k1, 132($sp)
sw $k1, arr__b_($k0)

# === j = j + 1 ===
addu $s5, $s5, 1

# === #T102 = j - m ===
subu $t0, $s5, $s2

# === JUMP_IF #T102<0 label_49 ===
bltz $t0, label_49
# RELEASE $t0

# === flag2 = 0 ===
move $s7, $zero

# === LABEL label_49 ===
label_49:

# === #T103 = kernelid - 9990 ===
subu $t0, $s0, 9990

# === JUMP_IF #T103!=0 label_50 ===
bne $t0, $zero, label_50
# RELEASE $t0

# === PRINT 9 strcon ===
la $a0, str__9
li $v0, 4
syscall

# === LABEL label_50 ===
label_50:

# === JUMP label_36 ===
j label_36

# === LABEL label_37 ===
label_37:

# === flag2 = 1 ===
li $s7, 1

# === i = i + 1 ===
addu $s4, $s4, 1

# === #T105 = i - n ===
subu $t0, $s4, $s1

# === JUMP_IF #T105<0 label_51 ===
bltz $t0, label_51
# RELEASE $t0

# === flag1 = 0 ===
move $s6, $zero

# === LABEL label_51 ===
label_51:

# === #T106 = kernelid - 9990 ===
subu $t0, $s0, 9990

# === JUMP_IF #T106!=0 label_52 ===
bne $t0, $zero, label_52
# RELEASE $t0

# === PRINT 10 strcon ===
la $a0, str__10
li $v0, 4
syscall

# === LABEL label_52 ===
label_52:

# === JUMP label_33 ===
j label_33

# === LABEL label_34 ===
label_34:

# === PRINT 11 strcon ===
la $a0, str__11
li $v0, 4
syscall

# === RETURN 0 ===
move $v0, $zero
jr $ra

# === =========END_FUNC int convn========= ===

# === =========FUNC void mymemmove========= ===
mymemmove:
lw $s0, 100($sp)

# === i = 0 ===
move $s1, $zero

# === LABEL label_53 ===
label_53:

# === #T107 = i - n ===
subu $t0, $s1, $s0

# === JUMP_IF #T107>=0 label_54 ===
bgez $t0, label_54
# RELEASE $t0

# === #T108 = b[i] ===
sll $k0, $s1, 2
lw $t0, arr__b_($k0)

# === a[i] = #T108 ===
sll $k0, $s1, 2
sw $t0, arr__a_($k0)
# RELEASE $t0

# === i = i + 1 ===
addu $s1, $s1, 1

# === JUMP label_53 ===
j label_53

# === LABEL label_54 ===
label_54:

# === RETURN ===
jr $ra

# === =========END_FUNC void mymemmove========= ===

# === =========FUNC void main========= ===
main:

# === i = 0 ===
move $s0, $zero

# === PREPARE_CALL myscanf ===
addi $sp, $sp, -200

# === CALL myscanf ===
sw $s0, 24($sp)
jal myscanf
lw $s0, 24($sp)
addi $sp, $sp, 200

# === c = %RET ===
move $s1, $v0

# === PREPARE_CALL myscanf ===
addi $sp, $sp, -200

# === CALL myscanf ===
sw $s0, 24($sp)
sw $s1, 28($sp)
jal myscanf
lw $s0, 24($sp)
lw $s1, 28($sp)
addi $sp, $sp, 200

# === n = %RET ===
move $s2, $v0

# === PREPARE_CALL myscanf ===
addi $sp, $sp, -200

# === CALL myscanf ===
sw $s0, 24($sp)
sw $s1, 28($sp)
sw $s2, 32($sp)
jal myscanf
lw $s0, 24($sp)
lw $s1, 28($sp)
lw $s2, 32($sp)
addi $sp, $sp, 200

# === m = %RET ===
move $s3, $v0

# === PREPARE_CALL myscanf ===
addi $sp, $sp, -200

# === CALL myscanf ===
sw $s0, 24($sp)
sw $s1, 28($sp)
sw $s2, 32($sp)
sw $s3, 36($sp)
jal myscanf
lw $s0, 24($sp)
lw $s1, 28($sp)
lw $s2, 32($sp)
lw $s3, 36($sp)
addi $sp, $sp, 200

# === arrlen = %RET ===
move $s4, $v0

# === LABEL label_55 ===
label_55:

# === #T114 = i - arrlen ===
subu $t0, $s0, $s4

# === JUMP_IF #T114>=0 label_56 ===
bgez $t0, label_56
# RELEASE $t0

# === PREPARE_CALL myscanf ===
addi $sp, $sp, -200

# === CALL myscanf ===
sw $s0, 24($sp)
sw $s1, 28($sp)
sw $s2, 32($sp)
sw $s3, 36($sp)
sw $s4, 40($sp)
jal myscanf
lw $s0, 24($sp)
lw $s1, 28($sp)
lw $s2, 32($sp)
lw $s3, 36($sp)
lw $s4, 40($sp)
addi $sp, $sp, 200

# === #T115 = %RET ===
move $t0, $v0

# === a[i] = #T115 ===
sll $k0, $s0, 2
sw $t0, arr__a_($k0)
# RELEASE $t0

# === i = i + 1 ===
addu $s0, $s0, 1

# === JUMP label_55 ===
j label_55

# === LABEL label_56 ===
label_56:

# === PREPARE_CALL myscanf ===
addi $sp, $sp, -200

# === CALL myscanf ===
sw $s0, 24($sp)
sw $s1, 28($sp)
sw $s2, 32($sp)
sw $s3, 36($sp)
sw $s4, 40($sp)
jal myscanf
lw $s0, 24($sp)
lw $s1, 28($sp)
lw $s2, 32($sp)
lw $s3, 36($sp)
lw $s4, 40($sp)
addi $sp, $sp, 200

# === task = %RET ===
move $s5, $v0

# === i = 0 ===
move $s0, $zero

# === LABEL label_57 ===
label_57:

# === #T118 = i - task ===
subu $t0, $s0, $s5

# === JUMP_IF #T118>=0 label_58 ===
bgez $t0, label_58
# RELEASE $t0

# === PREPARE_CALL myscanf ===
addi $sp, $sp, -200

# === CALL myscanf ===
sw $s0, 24($sp)
sw $s1, 28($sp)
sw $s2, 32($sp)
sw $s3, 36($sp)
sw $s4, 40($sp)
sw $s5, 44($sp)
jal myscanf
lw $s0, 24($sp)
lw $s1, 28($sp)
lw $s2, 32($sp)
lw $s3, 36($sp)
lw $s4, 40($sp)
lw $s5, 44($sp)
addi $sp, $sp, 200

# === #T119 = %RET ===
move $t0, $v0

# === kernelid[i] = #T119 ===
sll $k0, $s0, 2
sw $t0, arr__kernelid_($k0)
# RELEASE $t0

# === i = i + 1 ===
addu $s0, $s0, 1

# === JUMP label_57 ===
j label_57

# === LABEL label_58 ===
label_58:

# === i = 0 ===
move $s0, $zero

# === PRINT 12 strcon ===
la $a0, str__12
li $v0, 4
syscall

# === PRINT task int ===
move $a0, $s5
li $v0, 1
syscall

# === PRINT #ENDL ===
la $a0, newline__
li $v0, 4
syscall

# === LABEL label_59 ===
label_59:

# === #T121 = i - task ===
subu $t0, $s0, $s5

# === JUMP_IF #T121>=0 label_60 ===
bgez $t0, label_60
# RELEASE $t0

# === PRINT 13 strcon ===
la $a0, str__13
li $v0, 4
syscall

# === PRINT i int ===
move $a0, $s0
li $v0, 1
syscall

# === PRINT #ENDL ===
la $a0, newline__
li $v0, 4
syscall

# === PREPARE_CALL convn ===
addi $sp, $sp, -380

# === #T122 = kernelid[i] ===
sll $k0, $s0, 2
lw $t0, arr__kernelid_($k0)

# === PUSH_PARA #T122 ===
sw $t0, 100($sp)
# RELEASE $t0

# === PUSH_PARA n ===
sw $s2, 104($sp)

# === PUSH_PARA m ===
sw $s3, 108($sp)

# === PUSH_PARA c ===
sw $s1, 112($sp)

# === CALL convn ===
sw $s0, 24($sp)
sw $s1, 28($sp)
sw $s2, 32($sp)
sw $s3, 36($sp)
sw $s4, 40($sp)
sw $s5, 44($sp)
jal convn
lw $s0, 24($sp)
lw $s1, 28($sp)
lw $s2, 32($sp)
lw $s3, 36($sp)
lw $s4, 40($sp)
lw $s5, 44($sp)
addi $sp, $sp, 380

# === PREPARE_CALL mymemmove ===
addi $sp, $sp, -220

# === #T123 = n * m ===
mul $t0, $s2, $s3

# === PUSH_PARA #T123 ===
sw $t0, 100($sp)
# RELEASE $t0

# === CALL mymemmove ===
sw $s0, 24($sp)
sw $s1, 28($sp)
sw $s2, 32($sp)
sw $s3, 36($sp)
sw $s4, 40($sp)
sw $s5, 44($sp)
jal mymemmove
lw $s0, 24($sp)
lw $s1, 28($sp)
lw $s2, 32($sp)
lw $s3, 36($sp)
lw $s4, 40($sp)
lw $s5, 44($sp)
addi $sp, $sp, 220

# === i = i + 1 ===
addu $s0, $s0, 1

# === JUMP label_59 ===
j label_59

# === LABEL label_60 ===
label_60:

# === i = 0 ===
move $s0, $zero

# === LABEL label_61 ===
label_61:

# === #T125 = n * m ===
mul $t0, $s2, $s3

# === #T126 = i - #T125 ===
subu $t1, $s0, $t0
# RELEASE $t0

# === JUMP_IF #T126>=0 label_62 ===
bgez $t1, label_62
# RELEASE $t1

# === PREPARE_CALL myprintf ===
addi $sp, $sp, -200

# === #T127 = a[i] ===
sll $k0, $s0, 2
lw $t0, arr__a_($k0)

# === PUSH_PARA #T127 ===
sw $t0, 100($sp)
# RELEASE $t0

# === CALL myprintf ===
sw $s0, 24($sp)
sw $s1, 28($sp)
sw $s2, 32($sp)
sw $s3, 36($sp)
sw $s4, 40($sp)
sw $s5, 44($sp)
jal myprintf
lw $s0, 24($sp)
lw $s1, 28($sp)
lw $s2, 32($sp)
lw $s3, 36($sp)
lw $s4, 40($sp)
lw $s5, 44($sp)
addi $sp, $sp, 200

# === i = i + 1 ===
addu $s0, $s0, 1

# === JUMP label_61 ===
j label_61

# === LABEL label_62 ===
label_62:

# === RETURN ===
li $v0, 10
syscall

# === RETURN ===
li $v0, 10
syscall

# === =========END_FUNC void main========= ===
