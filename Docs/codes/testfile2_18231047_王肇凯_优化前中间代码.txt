str0: -
===============
0: =========FUNC int min=========
1: #T1 = a - b
2: JUMP_IF #T1<=0 label_1
3: RETURN b
4: JUMP label_2
5: LABEL label_1
6: RETURN a
7: LABEL label_2
8: =========END_FUNC int min=========
9: =========FUNC int max=========
10: #T2 = a - b
11: JUMP_IF #T2<=0 label_3
12: RETURN a
13: JUMP label_4
14: LABEL label_3
15: RETURN b
16: LABEL label_4
17: =========END_FUNC int max=========
18: =========FUNC int compare=========
19: i = 0
20: #T3 = bigintlength[0]
21: #T4 = bigintlength[1]
22: #T5 = #T3 - #T4
23: JUMP_IF #T5<=0 label_5
24: RETURN 1
25: LABEL label_5
26: #T6 = bigintlength[0]
27: #T7 = bigintlength[1]
28: #T8 = #T6 - #T7
29: JUMP_IF #T8>=0 label_6
30: #T9 = -1
31: RETURN #T9
32: LABEL label_6
33: #T10 = bigintlength[0]
34: #T11 = i - #T10
35: JUMP_IF #T11>=0 label_7
36: LABEL label_8
37: #T12 = 0
38: #T13 = #T12 + i
39: #T14 = bigintarr[#T13]
40: #T15 = 100
41: #T16 = #T15 + i
42: #T17 = bigintarr[#T16]
43: #T18 = #T14 - #T17
44: JUMP_IF #T18<=0 label_9
45: RETURN 1
46: LABEL label_9
47: #T19 = 0
48: #T20 = #T19 + i
49: #T21 = bigintarr[#T20]
50: #T22 = 100
51: #T23 = #T22 + i
52: #T24 = bigintarr[#T23]
53: #T25 = #T21 - #T24
54: JUMP_IF #T25>=0 label_10
55: #T26 = -1
56: RETURN #T26
57: LABEL label_10
58: #T27 = i + 1
59: i = #T27
60: #T28 = bigintlength[0]
61: #T29 = i - #T28
62: JUMP_IF #T29<0 label_8
63: LABEL label_7
64: RETURN 0
65: =========END_FUNC int compare=========
66: =========FUNC int subtract=========
67: #T30 = bigintlength[0]
68: l1 = #T30
69: #T31 = bigintlength[1]
70: l2 = #T31
71: PREPARE_CALL min
72: PUSH_PARA l1
73: PUSH_PARA l2
74: CALL min
75: #T32 = %RET + 0
76: k = #T32
77: PREPARE_CALL max
78: PUSH_PARA l1
79: PUSH_PARA l2
80: CALL max
81: #T33 = %RET + 0
82: j = #T33
83: PREPARE_CALL compare
84: CALL compare
85: #T34 = %RET + 0
86: #T35 = #T34 - 0
87: JUMP_IF #T35<0 label_11
88: flag = 0
89: i = 0
90: #T36 = i - l1
91: JUMP_IF #T36>=0 label_12
92: LABEL label_13
93: #T37 = l1 - 1
94: #T38 = #T37 - i
95: #T39 = 0
96: #T40 = #T39 + #T38
97: #T41 = bigintarr[#T40]
98: a[i] = #T41
99: #T42 = i + 1
100: i = #T42
101: #T43 = i - l1
102: JUMP_IF #T43<0 label_13
103: LABEL label_12
104: i = 0
105: #T44 = i - l2
106: JUMP_IF #T44>=0 label_14
107: LABEL label_15
108: #T45 = l2 - 1
109: #T46 = #T45 - i
110: #T47 = 100
111: #T48 = #T47 + #T46
112: #T49 = bigintarr[#T48]
113: b[i] = #T49
114: #T50 = i + 1
115: i = #T50
116: #T51 = i - l2
117: JUMP_IF #T51<0 label_15
118: LABEL label_14
119: JUMP label_16
120: LABEL label_11
121: flag = 1
122: i = 0
123: #T52 = i - l2
124: JUMP_IF #T52>=0 label_17
125: LABEL label_18
126: #T53 = l2 - 1
127: #T54 = #T53 - i
128: #T55 = 100
129: #T56 = #T55 + #T54
130: #T57 = bigintarr[#T56]
131: a[i] = #T57
132: #T58 = i + 1
133: i = #T58
134: #T59 = i - l2
135: JUMP_IF #T59<0 label_18
136: LABEL label_17
137: i = 0
138: #T60 = i - l1
139: JUMP_IF #T60>=0 label_19
140: LABEL label_20
141: #T61 = l1 - 1
142: #T62 = #T61 - i
143: #T63 = 0
144: #T64 = #T63 + #T62
145: #T65 = bigintarr[#T64]
146: b[i] = #T65
147: #T66 = i + 1
148: i = #T66
149: #T67 = i - l1
150: JUMP_IF #T67<0 label_20
151: LABEL label_19
152: LABEL label_16
153: i = 0
154: #T68 = i - k
155: JUMP_IF #T68>=0 label_21
156: LABEL label_22
157: #T69 = a[i]
158: #T70 = b[i]
159: #T71 = #T69 - #T70
160: JUMP_IF #T71<0 label_23
161: #T72 = a[i]
162: #T73 = b[i]
163: #T74 = #T72 - #T73
164: c[i] = #T74
165: JUMP label_24
166: LABEL label_23
167: #T75 = a[i]
168: #T76 = #T75 + 10
169: #T77 = b[i]
170: #T78 = #T76 - #T77
171: c[i] = #T78
172: #T79 = i + 1
173: #T80 = i + 1
174: #T81 = a[#T80]
175: #T82 = #T81 - 1
176: a[#T79] = #T82
177: LABEL label_24
178: #T83 = i + 1
179: i = #T83
180: #T84 = i - k
181: JUMP_IF #T84<0 label_22
182: LABEL label_21
183: #T85 = i - j
184: JUMP_IF #T85>=0 label_25
185: LABEL label_26
186: #T86 = a[i]
187: #T87 = #T86 - 0
188: JUMP_IF #T87<0 label_27
189: #T88 = a[i]
190: c[i] = #T88
191: JUMP label_28
192: LABEL label_27
193: #T89 = a[i]
194: #T90 = #T89 + 10
195: c[i] = #T90
196: #T91 = i + 1
197: #T92 = i + 1
198: #T93 = a[#T92]
199: #T94 = #T93 - 1
200: a[#T91] = #T94
201: LABEL label_28
202: #T95 = i + 1
203: i = #T95
204: #T96 = i - j
205: JUMP_IF #T96<0 label_26
206: LABEL label_25
207: #T97 = i - 1
208: #T98 = c[#T97]
209: #T99 = #T98 - 0
210: JUMP_IF #T99!=0 label_29
211: LABEL label_30
212: #T100 = i - 1
213: i = #T100
214: #T101 = i - 1
215: #T102 = c[#T101]
216: #T103 = #T102 - 0
217: JUMP_IF #T103==0 label_30
218: LABEL label_29
219: j = 0
220: #T104 = flag - 1
221: JUMP_IF #T104!=0 label_31
222: PRINT 0 strcon
223: PRINT #ENDL
224: LABEL label_31
225: #T105 = i - 1
226: k = #T105
227: #T106 = -1
228: #T107 = k - #T106
229: JUMP_IF #T107<=0 label_32
230: LABEL label_33
231: #T108 = c[k]
232: result[j] = #T108
233: #T109 = k - 1
234: k = #T109
235: #T110 = j + 1
236: j = #T110
237: #T111 = -1
238: #T112 = k - #T111
239: JUMP_IF #T112>0 label_33
240: LABEL label_32
241: RETURN j
242: =========END_FUNC int subtract=========
243: =========FUNC void main=========
244: i = 0
245: SCANF n
246: bigintlength[0] = n
247: #T113 = i - n
248: JUMP_IF #T113>=0 label_34
249: LABEL label_35
250: SCANF tmp
251: #T114 = 0
252: #T115 = #T114 + i
253: bigintarr[#T115] = tmp
254: #T116 = i + 1
255: i = #T116
256: #T117 = i - n
257: JUMP_IF #T117<0 label_35
258: LABEL label_34
259: SCANF n
260: bigintlength[1] = n
261: i = 0
262: #T118 = i - n
263: JUMP_IF #T118>=0 label_36
264: LABEL label_37
265: SCANF tmp
266: #T119 = 100
267: #T120 = #T119 + i
268: bigintarr[#T120] = tmp
269: #T121 = i + 1
270: i = #T121
271: #T122 = i - n
272: JUMP_IF #T122<0 label_37
273: LABEL label_36
274: i = 0
275: PREPARE_CALL subtract
276: CALL subtract
277: #T123 = %RET + 0
278: n = #T123
279: #T124 = i - n
280: JUMP_IF #T124>=0 label_38
281: LABEL label_39
282: #T125 = result[i]
283: PRINT #T125 int
284: PRINT #ENDL
285: #T126 = i + 1
286: i = #T126
287: #T127 = i - n
288: JUMP_IF #T127<0 label_39
289: LABEL label_38
290: RETURN
291: RETURN
292: =========END_FUNC void main=========
