.data
arr__global_1darray_uninitialized_: .space 24
arr__global_1darray_initialized_: .space 16
arr__global_2darray_initialized_: .space 16
str__0: .asciiz "x="
str__1: .asciiz "18373109\n"
str__2: .asciiz "Fib: "
newline__: .asciiz "\n"
.text

# === 0 global_var_initialized = 1234 ===
li $a1, 1234
sw $a1, 4($gp)

# === 1 global_1darray_initialized[0] = 1 ===
li $a2, 1
sw $a2, arr__global_1darray_initialized_+0($zero)

# === 2 global_1darray_initialized[1] = 2 ===
li $a2, 2
sw $a2, arr__global_1darray_initialized_+4($zero)

# === 3 global_1darray_initialized[2] = 4 ===
li $a2, 4
sw $a2, arr__global_1darray_initialized_+8($zero)

# === 4 global_1darray_initialized[3] = 4 ===
li $a2, 4
sw $a2, arr__global_1darray_initialized_+12($zero)

# === 5 global_2darray_initialized[0] = 5 ===
li $a2, 5
sw $a2, arr__global_2darray_initialized_+0($zero)

# === 6 global_2darray_initialized[1] = 6 ===
li $a2, 6
sw $a2, arr__global_2darray_initialized_+4($zero)

# === 7 global_2darray_initialized[2] = 7 ===
li $a2, 7
sw $a2, arr__global_2darray_initialized_+8($zero)

# === 8 global_2darray_initialized[3] = 8 ===
li $a2, 8
sw $a2, arr__global_2darray_initialized_+12($zero)

# === 9 =========FUNC void testnoreturn========= ===
addi $sp, $sp, -312
j main
testnoreturn:
lw $s0, 100($sp)

# === 10 global_var_uninitialized = n ===
sw $s0, 0($gp)

# === 11 RETURN ===
jr $ra

# === 12 =========END_FUNC void testnoreturn========= ===

# === 13 =========FUNC int fib========= ===
fib:
lw $s0, 100($sp)

# === 14 PRINT 0 strcon ===
la $a0, str__0
li $v0, 4
syscall

# === 15 PRINT x int ===
move $a0, $s0
li $v0, 1
syscall

# === 16 PRINT #ENDL ===
la $a0, newline__
li $v0, 4
syscall

# === 17 #T9 = x ===
move $t0, $s0

# === 18 JUMP_IF #T9!=0 label_1 ===
bne $t0, $zero, label_1
# RELEASE $t0

# === 19 RETURN 1 ===
li $v0, 1
jr $ra

# === 20 LABEL label_1 ===
label_1:

# === 21 #T10 = x - 1 ===
addiu $t0, $s0, -1

# === 22 JUMP_IF #T10!=0 label_2 ===
bne $t0, $zero, label_2
# RELEASE $t0

# === 23 RETURN 1 ===
li $v0, 1
jr $ra

# === 24 LABEL label_2 ===
label_2:

# === 25 #T11 = x - 1 ===
addiu $t0, $s0, -1

# === 26 PRINT 0 strcon ===
la $a0, str__0
li $v0, 4
syscall

# === 27 PRINT #T11 int ===
move $a0, $t0
# RELEASE $t0
li $v0, 1
syscall

# === 28 PRINT #ENDL ===
la $a0, newline__
li $v0, 4
syscall

# === 29 _1_#T9 = #T11 ===
lw $t0, 112($sp)

# === 30 JUMP_IF _1_#T9!=0 _1_label_1 ===
bne $t0, $zero, _1_label_1
# RELEASE $t0

# === 31 %RET = 1 ===
li $v0, 1

# === 32 JUMP label_7 ===
j label_7

# === 33 LABEL _1_label_1 ===
_1_label_1:

# === 34 _1_#T10 = #T11 - 1 ===
lw $a1, 112($sp)
addiu $t0, $a1, -1

# === 35 JUMP_IF _1_#T10!=0 _1_label_2 ===
bne $t0, $zero, _1_label_2
# RELEASE $t0

# === 36 %RET = 1 ===
li $v0, 1

# === 37 JUMP label_7 ===
j label_7

# === 38 LABEL _1_label_2 ===
_1_label_2:

# === 39 PREPARE_CALL fib ===
addi $sp, $sp, -288

# === 40 _1_#T11 = #T11 - 1 ===
lw $a1, 400($sp)
addiu $t0, $a1, -1

# === 41 PUSH_PARA _1_#T11 ===
sw $t0, 100($sp)
# RELEASE $t0

# === 42 CALL fib ===
sw $s0, 24($sp)
sw $ra, 0($sp)
jal fib
lw $ra, 0($sp)
lw $s0, 24($sp)
addi $sp, $sp, 288

# === 43 _1_#T12 = %RET ===
move $t0, $v0

# === 44 PREPARE_CALL fib ===
addi $sp, $sp, -288

# === 45 _1_#T13 = #T11 - 2 ===
lw $a1, 400($sp)
addiu $t1, $a1, -2

# === 46 PUSH_PARA _1_#T13 ===
sw $t1, 100($sp)
# RELEASE $t1

# === 47 CALL fib ===
sw $t0, 56($sp)
# RELEASE $t0
sw $s0, 24($sp)
sw $ra, 0($sp)
jal fib
lw $ra, 0($sp)
lw $s0, 24($sp)
lw $t0, 56($sp)
addi $sp, $sp, 288

# === 48 _1_#T14 = %RET ===
move $t1, $v0

# === 49 _1_#T15 = _1_#T12 + _1_#T14 ===
addu $t2, $t0, $t1
# RELEASE $t0
# RELEASE $t1

# === 50 %RET = _1_#T15 ===
move $v0, $t2
# RELEASE $t2

# === 51 LABEL label_7 ===
label_7:

# === 52 #T12 = %RET ===
move $t0, $v0

# === 53 #T13 = x - 2 ===
addiu $t1, $s0, -2

# === 54 PRINT 0 strcon ===
la $a0, str__0
li $v0, 4
syscall

# === 55 PRINT #T13 int ===
move $a0, $t1
# RELEASE $t1
li $v0, 1
syscall

# === 56 PRINT #ENDL ===
la $a0, newline__
li $v0, 4
syscall

# === 57 _2_#T9 = #T13 ===
lw $t1, 120($sp)

# === 58 JUMP_IF _2_#T9!=0 _2_label_1 ===
bne $t1, $zero, _2_label_1
# RELEASE $t1

# === 59 %RET = 1 ===
li $v0, 1

# === 60 JUMP label_8 ===
j label_8

# === 61 LABEL _2_label_1 ===
_2_label_1:

# === 62 _2_#T10 = #T13 - 1 ===
lw $a1, 120($sp)
addiu $t1, $a1, -1

# === 63 JUMP_IF _2_#T10!=0 _2_label_2 ===
bne $t1, $zero, _2_label_2
# RELEASE $t1

# === 64 %RET = 1 ===
li $v0, 1

# === 65 JUMP label_8 ===
j label_8

# === 66 LABEL _2_label_2 ===
_2_label_2:

# === 67 PREPARE_CALL fib ===
addi $sp, $sp, -288

# === 68 _2_#T11 = #T13 - 1 ===
lw $a1, 408($sp)
addiu $t1, $a1, -1

# === 69 PUSH_PARA _2_#T11 ===
sw $t1, 100($sp)
# RELEASE $t1

# === 70 CALL fib ===
sw $t0, 56($sp)
# RELEASE $t0
sw $s0, 24($sp)
sw $ra, 0($sp)
jal fib
lw $ra, 0($sp)
lw $s0, 24($sp)
lw $t0, 56($sp)
addi $sp, $sp, 288

# === 71 _2_#T12 = %RET ===
move $t1, $v0

# === 72 PREPARE_CALL fib ===
addi $sp, $sp, -288

# === 73 _2_#T13 = #T13 - 2 ===
lw $a1, 408($sp)
addiu $t2, $a1, -2

# === 74 PUSH_PARA _2_#T13 ===
sw $t2, 100($sp)
# RELEASE $t2

# === 75 CALL fib ===
sw $t0, 56($sp)
# RELEASE $t0
sw $t1, 60($sp)
# RELEASE $t1
sw $s0, 24($sp)
sw $ra, 0($sp)
jal fib
lw $ra, 0($sp)
lw $s0, 24($sp)
lw $t0, 56($sp)
lw $t1, 60($sp)
addi $sp, $sp, 288

# === 76 _2_#T14 = %RET ===
move $t2, $v0

# === 77 _2_#T15 = _2_#T12 + _2_#T14 ===
addu $t3, $t1, $t2
# RELEASE $t1
# RELEASE $t2

# === 78 %RET = _2_#T15 ===
move $v0, $t3
# RELEASE $t3

# === 79 LABEL label_8 ===
label_8:

# === 80 #T14 = %RET ===
move $t1, $v0

# === 81 #T15 = #T12 + #T14 ===
addu $t2, $t0, $t1
# RELEASE $t0
# RELEASE $t1

# === 82 RETURN #T15 ===
move $v0, $t2
# RELEASE $t2
jr $ra

# === 83 =========END_FUNC int fib========= ===

# === 84 =========FUNC char testchar========= ===
testchar:

# === 85 RETURN 99 ===
li $v0, 99
jr $ra

# === 86 =========END_FUNC char testchar========= ===

# === 87 =========FUNC int testmuldiv========= ===
testmuldiv:
lw $s0, 100($sp)
lw $s1, 104($sp)
lw $s2, 108($sp)

# === 88 #T16 = b / c ===
div $s1, $s2
mflo $t0

# === 89 #T17 = a * #T16 ===
mul $t1, $s0, $t0
# RELEASE $t0

# === 90 RETURN #T17 ===
move $v0, $t1
# RELEASE $t1
jr $ra

# === 91 =========END_FUNC int testmuldiv========= ===

# === 92 =========FUNC void main========= ===
main:

# === 93 c = 97 ===
li $s0, 97

# === 94 PRINT 1 strcon ===
la $a0, str__1
li $v0, 4
syscall

# === 95 global_var_uninitialized = 144 ===
li $a1, 144
sw $a1, 0($gp)

# === 96 LABEL label_9 ===
label_9:

# === 97 PRINT global_var_uninitialized int ===
lw $a0, 0($gp)
li $v0, 1
syscall

# === 98 PRINT #ENDL ===
la $a0, newline__
li $v0, 4
syscall

# === 99 SCANF n ===
li $v0, 5
syscall
move $s1, $v0

# === 100 PRINT 2 strcon ===
la $a0, str__2
li $v0, 4
syscall

# === 101 PRINT 0 strcon ===
la $a0, str__0
li $v0, 4
syscall

# === 102 PRINT n int ===
move $a0, $s1
li $v0, 1
syscall

# === 103 PRINT #ENDL ===
la $a0, newline__
li $v0, 4
syscall

# === 104 _4_#T9 = n ===
move $t0, $s1

# === 105 JUMP_IF _4_#T9!=0 _4_label_1 ===
bne $t0, $zero, _4_label_1
# RELEASE $t0

# === 106 %RET = 1 ===
li $v0, 1

# === 107 JUMP label_10 ===
j label_10

# === 108 LABEL _4_label_1 ===
_4_label_1:

# === 109 _4_#T10 = n - 1 ===
addiu $t0, $s1, -1

# === 110 JUMP_IF _4_#T10!=0 _4_label_2 ===
bne $t0, $zero, _4_label_2
# RELEASE $t0

# === 111 %RET = 1 ===
li $v0, 1

# === 112 JUMP label_10 ===
j label_10

# === 113 LABEL _4_label_2 ===
_4_label_2:

# === 114 PREPARE_CALL fib ===
addi $sp, $sp, -288

# === 115 _4_#T11 = n - 1 ===
addiu $t0, $s1, -1

# === 116 PUSH_PARA _4_#T11 ===
sw $t0, 100($sp)
# RELEASE $t0

# === 117 CALL fib ===
sw $s0, 24($sp)
sw $s1, 28($sp)
jal fib
lw $s0, 24($sp)
lw $s1, 28($sp)
addi $sp, $sp, 288

# === 118 _4_#T12 = %RET ===
move $t0, $v0

# === 119 PREPARE_CALL fib ===
addi $sp, $sp, -288

# === 120 _4_#T13 = n - 2 ===
addiu $t1, $s1, -2

# === 121 PUSH_PARA _4_#T13 ===
sw $t1, 100($sp)
# RELEASE $t1

# === 122 CALL fib ===
sw $t0, 56($sp)
# RELEASE $t0
sw $s0, 24($sp)
sw $s1, 28($sp)
jal fib
lw $s0, 24($sp)
lw $s1, 28($sp)
lw $t0, 56($sp)
addi $sp, $sp, 288

# === 123 _4_#T14 = %RET ===
move $t1, $v0

# === 124 _4_#T15 = _4_#T12 + _4_#T14 ===
addu $t2, $t0, $t1
# RELEASE $t0
# RELEASE $t1

# === 125 %RET = _4_#T15 ===
move $v0, $t2
# RELEASE $t2

# === 126 LABEL label_10 ===
label_10:

# === 127 #T18 = %RET ===
move $t0, $v0

# === 128 PRINT #T18 int ===
move $a0, $t0
# RELEASE $t0
li $v0, 1
syscall

# === 129 PRINT #ENDL ===
la $a0, newline__
li $v0, 4
syscall

# === 130 %RET = 99 ===
li $v0, 99

# === 131 LABEL label_11 ===
label_11:

# === 132 #T19 = %RET ===
move $t0, $v0

# === 133 PRINT #T19 char ===
move $a0, $t0
# RELEASE $t0
li $v0, 11
syscall

# === 134 PRINT #ENDL ===
la $a0, newline__
li $v0, 4
syscall

# === 135 PRINT 75 char ===
li $a0, 75
li $v0, 11
syscall

# === 136 PRINT #ENDL ===
la $a0, newline__
li $v0, 4
syscall

# === 137 %RET = 2048 ===
li $v0, 2048

# === 138 LABEL label_12 ===
label_12:

# === 139 #T20 = %RET ===
move $t0, $v0

# === 140 PRINT #T20 int ===
move $a0, $t0
# RELEASE $t0
li $v0, 1
syscall

# === 141 PRINT #ENDL ===
la $a0, newline__
li $v0, 4
syscall

# === 142 i = 0 ===
move $s2, $zero

# === 143 #T23 = i - 3 ===
addiu $t0, $s2, -3

# === 144 JUMP_IF #T23>=0 label_3 ===
bgez $t0, label_3
# RELEASE $t0

# === 145 LABEL label_4 ===
label_4:

# === 146 #T24 = global_1darray_initialized[i] ===
sll $a1, $s2, 2
lw $t0, arr__global_1darray_initialized_($a1)

# === 147 #T25 = i + 1 ===
addiu $t1, $s2, 1

# === 148 #T26 = #T24 - #T25 ===
subu $t2, $t0, $t1
# RELEASE $t0
# RELEASE $t1

# === 149 JUMP_IF #T26!=0 label_5 ===
bne $t2, $zero, label_5
# RELEASE $t2

# === 150 PRINT global_var_initialized int ===
lw $a0, 4($gp)
li $v0, 1
syscall

# === 151 PRINT #ENDL ===
la $a0, newline__
li $v0, 4
syscall

# === 152 JUMP label_6 ===
j label_6

# === 153 LABEL label_5 ===
label_5:

# === 154 #T29 = global_2darray_initialized[0] ===
lw $t0, arr__global_2darray_initialized_+0($zero)

# === 155 PRINT #T29 int ===
move $a0, $t0
# RELEASE $t0
li $v0, 1
syscall

# === 156 PRINT #ENDL ===
la $a0, newline__
li $v0, 4
syscall

# === 157 LABEL label_6 ===
label_6:

# === 158 i = i + 1 ===
addiu $s2, $s2, 1

# === 159 #T32 = i - 3 ===
addiu $t0, $s2, -3

# === 160 JUMP_IF #T32<0 label_4 ===
bltz $t0, label_4
# RELEASE $t0

# === 161 LABEL label_3 ===
label_3:

# === 162 SCANF n ===
li $v0, 5
syscall
move $s1, $v0

# === 163 global_1darray_uninitialized[3] = n ===
sw $s1, arr__global_1darray_uninitialized_+12($zero)

# === 164 #T33 = global_1darray_uninitialized[3] ===
lw $t0, arr__global_1darray_uninitialized_+12($zero)

# === 165 PRINT #T33 int ===
move $a0, $t0
# RELEASE $t0
li $v0, 1
syscall

# === 166 PRINT #ENDL ===
la $a0, newline__
li $v0, 4
syscall

# === 167 RETURN ===
li $v0, 10
syscall

# === 168 RETURN ===
li $v0, 10
syscall

# === 169 =========END_FUNC void main========= ===
